
@{
    ViewBag.Title = "Donar";
    Layout = "~/Views/Shared/_PropuestasLayout.cshtml";
}
@Styles.Render("~/Content/Views/Inicio/inicio.css")
@Styles.Render("~/Content/Views/Inicio/inicioResponsive.css")
<script>
    var pathCrearDonacionInsumo = '@Url.Action("","")';
</script>
@using Enums
@model Solidam.ViewModel.DonarViewModel
<div class="container">
    <h2>Donar para @Model.Propuesta.Nombre</h2>
    @switch (Model.Propuesta.TipoDonacion)
    {
        case (int)TipoDonacion.Monetaria:
            var requerido = Model.Propuesta.PropuestasDonacionesMonetarias?.FirstOrDefault(pdm => pdm.IdPropuesta == Model.Propuesta.IdPropuesta)?.Dinero;
            var restante = requerido - Model.DonacionesMonetarias?.Sum(dm => dm.Dinero);
            <div class="card">
                <div class="card-header">
                    Donación monetaria
                </div>
                <div class="card-body">
                    <h5 class="card-title">Requerido: <strong>$ @requerido</strong></h5>
                    <h3 class="card-title">Restante: <strong>$ @restante</strong></h3>
                    <div class="form-group">
                        <label>Ingrese la cantidad de dinero que donará</label>
                        <input class="form-control" type="text" name="Dinero" />
                    </div>
                    <div class="form-group">
                        <label>Adjunte el comprobante de la transferencia</label>
                        <input class="form-control" type="file" />
                    </div>
                    <a href="#" class="btn btn-primary mt-5">Confirmar</a>
                </div>
            </div>
            break;
        case (int)TipoDonacion.HorasDeTrabajo:
            var horasRequeridas = Model.Propuesta.PropuestasDonacionesHorasTrabajo?.FirstOrDefault(pdm => pdm.IdPropuesta == Model.Propuesta.IdPropuesta)?.CantidadHoras;
            var horasRestantes = horasRequeridas - Model.DonacionesHorasTrabajo?.Sum(dm => dm.Cantidad);
            <div class="card">
                <div class="card-header">
                    Donación de horas de trabajo (@(Model.Propuesta.PropuestasDonacionesHorasTrabajo?.FirstOrDefault(pdm => pdm.IdPropuesta == Model.Propuesta.IdPropuesta)?.Profesion))
                </div>
                <div class="card-body">
                    <h5 class="card-title">Requerido: <strong>@horasRequeridas hs</strong></h5>
                    <h3 class="card-title">Restante: <strong>@horasRestantes hs</strong></h3>
                    <div class="form-group">
                        <label>Ingrese la cantidad de horas que trabajará</label>
                        <input class="form-control" type="number" name="Cantidad" />
                    </div>
                    <a href="#" class="btn btn-primary mt-5">Confirmar</a>
                </div>
            </div>
            break;
        case (int)TipoDonacion.Insumos:
            <div class="card">
                <div class="card-header">
                    Donación de Insumos
                </div>
                <div class="card-body">
                    <h5 class="card-title">Requerido </h5>
                    <div class="d-flex flex-column">
                        @foreach (var itemRequerido in Model.Propuesta.PropuestasDonacionesInsumos)
                        {
                            var cantidadObtenida = Model.DonacionesInsumos?.Where(di => di.IdPropuestaDonacionInsumo == itemRequerido.IdPropuestaDonacionInsumo).Sum(d => d.Cantidad);
                            if (cantidadObtenida == null)
                            {
                                cantidadObtenida = 0;
                            }
                            if (itemRequerido.Cantidad != cantidadObtenida)
                            {
                                <div class="d-flex align-items-center">
                                    <div class="mr-3">
                                        <input type="checkbox" don-id="@itemRequerido.IdPropuestaDonacionInsumo" class="check" />
                                    </div>
                                    <div>
                                        <strong>(@itemRequerido.Cantidad)</strong> @itemRequerido.Nombre <span class="ml-4">Restantes: @(itemRequerido.Cantidad - cantidadObtenida) unidades</span>
                                    </div>
                                    <div class="ml-4">
                                        <input type="number" class="form-control d-none" />
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="d-flex align-items-center">
                                    <div style="text-decoration: line-through">
                                        <strong>(@itemRequerido.Cantidad)</strong> @itemRequerido.Nombre <span class="ml-4">Restantes: @(itemRequerido.Cantidad - cantidadObtenida) unidades</span>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                    <a href="#" id="btnConfirmar" class="btn btn-primary mt-5">Confirmar</a>
                </div>
            </div>
            break;
    }
</div>

@Scripts.Render("~/Scripts/Views/Propuesta/Donar.js")

