@model Solidam.ViewModel.DonarViewModel
@{
    var propuestaMonetaria = Model.Propuesta.PropuestasDonacionesMonetarias?.FirstOrDefault();
    var requerido = propuestaMonetaria?.Dinero;
    var restante = requerido - Model.DonacionesMonetarias?.Sum(dm => dm.Dinero);
}
@Styles.Render("~/Content/Views/Propuestas/pv_Donar.css")
@*@Styles.Render("~/Content/Views/Shared/footer_2.css")*@

<div class="card w-50 mx-auto">
    <div class="card-header">
        Donación monetaria
    </div>
    <div class="card-body mb-2">
        <form method="post" enctype="multipart/form-data" id="form" action="@Url.Action("Donar","DonacionesMonetarias")">
            <h5 class="card-title">Requerido: <strong>$ @requerido</strong></h5>
            <h3 class="card-title">Restante: <strong>$ @restante</strong></h3>
            <div class="form-group">
                <label>Ingrese la cantidad de dinero que donará</label>
                @Html.EditorFor(model => model.DonacionMonetaria.Dinero, new { htmlAttributes = new { type = "number", @class = "form-control" } })
                <div class="errorSolidam"><b>@Html.ValidationMessageFor(model => model.DonacionMonetaria.Dinero, "", new { @class = "text-danger" })</b></div>
            </div>
            <div class="form-group">
                <label>Adjunte el comprobante de la transferencia</label>
                @Html.TextBoxFor(model => model.DonacionMonetaria.File, new { type = "file", @class = "form-control" })
                <div class="errorSolidam"><b>@Html.ValidationMessageFor(model => model.DonacionMonetaria.File, "", new { @class = "text-danger mt-2" })</b></div>
            </div>
            <input type="hidden" value="@(propuestaMonetaria?.IdPropuestaDonacionMonetaria)" name="DonacionMonetaria.IdPropuestaDonacionMonetaria" />
            <input type="hidden" value="@(propuestaMonetaria?.IdPropuesta)" name="Propuesta.IdPropuesta" />
            <button type="submit" class="btn btn-success mt-2">Confirmar</button>
        </form>
    </div>
</div>

